1. ADD_INP_1_1 (First bit of inp 1)
2. ADD_INP_1_2 (First bit of inp 2)
3. ADD_INP_1_1_VCAT [INTERSECT ADD_INP_1_1 Not_OP] (this just gets rid of the ABCD put in ADD_INP_1_1)
4. ADD_INP_1_2_VCAT [INTERSECT ADD_INP_1_1 Not_OP]
5. ADD_INP_1_AND [INTERSECT ADD_INP_1_1_VCAT ADD_INP_1_2_VCAT] # Important (ADD_INP_1_CARRY)
6. ADD_INP_1_NAND [DIFFERENCE Not_OP ADD_INP_1_AND]
7. ADD_INP_1_OR [UNION ADD_INP_1_1_VCAT ADD_INP_1_2_VCAT]
9. ADD_1_SUM [INTERSECT ADD_INP_1_NAND ADD_INP_1_OR] # Important - Bit 1

[Now, we need to do this for ADD_INP_2 but with carry]
10. ADD_INP_1_CARRY is just ADD_INP_1_AND

[Apply]
12. ADD_INP_2_1 (Second bit of inp 1)
13. ADD_INP_2_2 (Second bit of inp 2)
14. ADD_INP_2_1_VCAT
15. ADD_INP_2_2_VCAT
16. ADD_INP_2_AND [INTERSECT ADD_INP_2_1_VCAT ADD_INP_2_2_VCAT]
17. ADD_INP_2_NAND [DIFFERENCE Not_OP ADD_INP_2_AND]
18. ADD_INP_2_OR [UNION ADD_INP_2_1_VCAT ADD_INP_2_2_VCAT]
19. ADD_INP_2_XOR [INTERSECT ADD_INP_2_NAND ADD_INP_2_OR]
20. ADD_INP_2_NEED_CARRY [INTERSECT ADD_INP_2_XOR ADD_INP_1_AND]
21. ADD_INP_2_CARRY [UNION ADD_INP_2_NEED_CARRY ADD_INP_2_AND] # Important - Final carry

[XOR ADD_INP_2_XOR, ADD_INP_1_AND to add Carry]
22. ADD_2_OR [UNION ADD_INP_2_XOR ADD_INP_1_AND]
23. ADD_2_AND [INTERSECT ADD_INP_2_XOR ADD_INP_1_AND]
24. ADD_2_NAND [DIFFERENT Not_OP ADD_2_AND]
26. ADD_2_SUM [INTERSECT ADD_2_NAND ADD_2_OR]


[How it works]
[ADD_INP_2_1][ADD_INP_1_1] + [ADD_INP_2_2][ADD_INP_1_2] = [ADD_2_SUM][ADD_1_SUM] (with carry ADD_INP_2_CARRY)