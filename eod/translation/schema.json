{
  "$schema": "http://json-schema.org/schema",
  "type": "object",
  "properties": {
    "Name": {
      "type": "string",
      "description": "The name of the language."
    },
    "MustCombine": {
      "type": "string",
      "description": "Tells the user the number of elements they must combine."
    },
    "MaxCombine": {
      "type": "string",
      "description": "Tells the user the most elements they can combine."
    },
    "DoesntExist": {
      "type": "string",
      "description": "Tells the user that a single element doesn't exist."
    },
    "DoesntExistMultiple": {
      "type": "string",
      "description": "Tells the user that multiple elements don't exist."
    },
    "DoesntExistJoiner": {
      "type": "string",
      "description": "The word that joins the don't have message, like in \"a, b, and c\" this would be \"and\"."
    },
    "DontHave": {
      "type": "string",
      "description": "Tells the user they don't have a single element."
    },
    "DontHaveMultiple": {
      "type": "string",
      "description": "Tells the user they don't have a set of elements."
    },
    "DontHaveJoiner": {
      "type": "string",
      "description": "The word that joins the don't have message, like in \"a, b, or c\" this would be \"or\"."
    },
    "YouMade": {
      "type": "string",
      "description": "Tells the user they made an element."
    },
    "YouHave": {
      "type": "string",
      "description": "The the user they made an element, but they already have it."
    },
    "ComboNoExist": {
      "type": "string",
      "description": "Tells the user the combo doesn't exist and they can suggest a result."
    },
    "NewsChannel": {
      "type": "string",
      "description": "Tell the user the news channel was updated."
    },
    "VotingChannel": {
      "type": "string",
      "description": "Tell the user the voting channel was updated."
    },
    "VoteCount": {
      "type": "string",
      "description": "Tell the user the vote count was updated."
    },
    "PollCount": {
      "type": "string",
      "description": "Tell the user the poll count was updated."
    },
    "ModRole": {
      "type": "string",
      "description": "Tell the user the moderator role was updated."
    },
    "UserColorReset": {
      "type": "string",
      "description": "Tell the user their color was reset."
    },
    "HexMustBe6": {
      "type": "string",
      "description": "Tell the user that a hex color must be 6 characters."
    },
    "UserColor": {
      "type": "string",
      "description": "Tell the user their color was updated."
    },
    "Language": {
      "type": "string",
      "description": "Tell the user the server language was set."
    },
    "PlayChannelNew": {
      "type": "string",
      "description": "Tell the user a channel was marked as a play channel"
    },
    "PlayChannelRemove": {
      "type": "string",
      "description": "Tell the user a channel was marked as not being a play channel"
    },
    "CatNameBlank": {
      "type": "string",
      "description": "Tell the user the category name can't be blank."
    },
    "CatNameTooLong": {
      "type": "string",
      "description": "Tell the user the category name is too long."
    },
    "CatNoExist": {
      "type": "string",
      "description": "Tell the user the category doesn't exist."
    },
    "CatAlreadyExist": {
      "type": "string",
      "description": "Tells the user the category already exists."
    },
    "NotInCat": {
      "type": "string",
      "description": "Tell the user the element isn't in the category."
    },
    "Categorized": {
      "type": "string",
      "description": "Tell the user the elements were categorized."
    },
    "SuggestCategorized": {
      "type": "string",
      "description": "Tell the user the element was suggested to be categorized."
    },
    "SuggestCategorizedMult": {
      "type": "string",
      "description": "Tell the user the elements were suggested to be categorized."
    },
    "CategorizeMultSuggestCategorized": {
      "type": "string",
      "description": "Tell the user the elements were categorized and one was suggested to be categorized."
    },
    "CategorizeMultSuggestCategorizedMult": {
      "type": "string",
      "description": "Tell the user the elements were categorized and were suggested to be categorized."
    },
    "CategoryUsedInVCat": {
      "type": "string",
      "description": "Tell the user the category is used in a Virtual Category."
    },
    "UnCategorized": {
      "type": "string",
      "description": "Tell the user the elements were un-categorized."
    },
    "SuggestUnCategorized": {
      "type": "string",
      "description": "Tell the user the element was suggested to be un-categorized."
    },
    "SuggestUnCategorizedMult": {
      "type": "string",
      "description": "Tell the user the elements were suggested to be un-categorized."
    },
    "UnCategorizeMultSuggestUnCategorized": {
      "type": "string",
      "description": "Tell the user the elements were un-categorized and one was suggested to be un-categorized."
    },
    "UnCategorizeMultSuggestUnCategorizedMult": {
      "type": "string",
      "description": "Tell the user the elements were un-categorized and were suggested to be un-categorized."
    },
    "Stats": {
      "type": "string",
      "description": "The stats message."
    },
    "ViewMoreStats": {
      "type": "string",
      "description": "The message in the View More Stats button."
    },
    "ElemCategories": {
      "type": "string",
      "description": "The title of the /get categories embed."
    },
    "NameDownloadedCat": {
      "type": "string",
      "description": "Tell the user which category they downloaded."
    },
    "CatSentToDMs": {
      "type": "string",
      "description": "Tell the user that the category was sent to their DMs."
    },
    "InvalidSort": {
      "type": "string",
      "description": "Tell the user the chosen sort is not valid in the current context."
    },
    "AllCategories": {
      "type": "string",
      "description": "The title of the embed shown when listing all categories using /cat without a specified category."
    },
    "NewAIIdea": {
      "type": "string",
      "description": "The message in the New AI Generated Idea button."
    },
    "FailedAIGenerate": {
      "type": "string",
      "description": "Tell the user the AI could not generate a combo."
    },
    "SuggestIdea": {
      "type": "string",
      "description": "Tells the user they can suggest a result for the generated combo."
    },
    "YourAIIdea": {
      "type": "string",
      "description": "Tells the user what their AI generated combo is."
    },
    "ElemFound": {
      "type": "string",
      "description": "The title of the /get found embed."
    },
    "NewHint": {
      "type": "string",
      "description": "The message in the New Hint button."
    },
    "InvHintNoElem": {
      "type": "string",
      "description": "Tells the user they must input an element to get an inverse hint."
    },
    "HintElem": {
      "type": "string",
      "description": "The title of the hint embed."
    },
    "InvHintElem": {
      "type": "string",
      "description": "The title of the inverse hint embed."
    },
    "HintCountHasElem": {
      "type": "string",
      "description": "The footer of the hint embed saying how many combos are in the hint and that the user has the element."
    },
    "HintCountNoHasElem": {
      "type": "string",
      "description": "The footer of the hint embed saying how many combos are in the hint and that the user does not have the element"
    },
    "ElemSort": {
      "type": "string",
      "description": "The title of the element sort embed."
    },
    "InfoExpand": {
      "type": "string",
      "description": "The message in the Expand button."
    },
    "InfoCollapse": {
      "type": "string",
      "description": "The message in the Collapse buton."
    },
    "InfoAdditionalElemCats": {
      "type": "string",
      "description": "The message that replaces any categories past the third in the info page, telling the user how many more categories the element is in besides those three."
    },
    "DefaultComment": {
      "type": "string",
      "description": "The default element mark."
    },
    "StarterElemCreateTime": {
      "type": "string",
      "description": "The message that should be displayed as the creation time of the starter elements."
    },
    "InfoCommenter": {
      "type": "string",
      "description": "The label for the Commenter on the info page."
    },
    "InfoImager": {
      "type": "string",
      "description": "The label for the Imager on the info page."
    },
    "InfoColorer": {
      "type": "string",
      "description": "The label for the Colorer on the info page."
    },
    "InfoComment": {
      "type": "string",
      "description": "The label for the Comment on the info page."
    },
    "InfoCombosUsedIn": {
      "type": "string",
      "description": "The label for the number of combos an element is used in on the info page."
    },
    "InfoCombosMadeWith": {
      "type": "string",
      "description": "The label for the number of combos an element can be created with on the info page."
    },
    "InfoUsersFoundBy": {
      "type": "string",
      "description": "The label for the number of users who have found an element on the info page."
    },
    "InfoCreator": {
      "type": "string",
      "description": "The label for the Creator on the info page."
    },
    "InfoCreateTime": {
      "type": "string",
      "description": "The label for the Creation Time on the info page."
    },
    "InfoColor": {
      "type": "string",
      "description": "The label for the Color on the info page."
    },
    "InfoTreeSize": {
      "type": "string",
      "description": "The label for the Tree Size on the info page."
    },
    "InfoComplexity": {
      "type": "string",
      "description": "The label for the Complexity on the info page."
    },
    "InfoDifficulty": {
      "type": "string",
      "description": "The label for the Difficulty on the info page."
    },
    "InfoTitle": {
      "type": "string",
      "description": "The title of the info page, also displaying the element."
    },
    "InfoElemIDUserHasElem": {
      "type": "string",
      "description": "The element ID, and the message saying that the user has the element."
    },
    "InfoElemIDUserNoHasElem": {
      "type": "string",
      "description": "The element ID, and the message saying that the user does not have the element."
    },
    "InfoElemProgress": {
      "type": "string",
      "description": "The label for the user's progress to the element on the info page."
    },
    "InfoElemCats": {
      "type": "string",
      "description": "The label for the Categories on the info page."
    },
    "InvalidElemID": {
      "type": "string",
      "description": "Tells the user that the element ID they inputted is invalid."
    },
    "ResetUserInv": {
      "type": "string",
      "description": "Tells the user that the inventory of the specified user was sucessfully reset."
    },
    "DownloadedInvUserServer": {
      "type": "string",
      "description": "Tells the user whose inventory was downloaded, and what server it was downloaded from."
    },
    "SentInvToDMs": {
      "type": "string",
      "description": "Tells the user that their downloaded inventory was sent to their DMs."
    },
    "LbImage": {
      "type": "string",
      "description": "The name given to the Leaderboard Image."
    },
    "UserInventory": {
      "type": "string",
      "description": "The title of the inventory embed, displaying whose inventory it is, the number of elements they have, and the percentage of all elements that they have."
    },
    "LbTitleElem": {
      "type": "string",
      "description": "The title given to element leaderboards."
    },
    "LbTitleMade": {
      "type": "string",
      "description": "The title given to elements made leaderboards."
    },
    "LbTitleSigned": {
      "type": "string",
      "description": "The title given to elements signed leaderboards."
    },
    "LbTitleImaged": {
      "type": "string",
      "description": "The title given to elements imaged leaderboards."
    },
    "LbTitleColored": {
      "type": "string",
      "description": "The title given to elements colored leaderboards."
    },
    "LbTitleCatImaged": {
      "type": "string",
      "description": "The title given to categories imaged leaderboards."
    },
    "LbTitleCatColored": {
      "type": "string",
      "description": "The title given to categories colored leaderboards."
    },
    "LbTitleUsed": {
      "type": "string",
      "description": "The title given to elements used leaderboards."
    },
    "LbTitleCatSigned": {
      "type": "string",
      "description": "The title given to categories signed leaderboards."
    },
    "NewIdea": {
      "type": "string",
      "description": "The message in the New Idea button."
    },
    "HaveNoElemsInCat": {
      "type": "string",
      "description": "Tells the user that they have no elements in the specified category."
    },
    "FailedIdea": {
      "type": "string",
      "description": "Tells the user that no idea could be generated with the given parameters."
    },
    "YourIdea": {
      "type": "string",
      "description": "Tells the user what their random combo is."
    },
    "NoResults": {
      "type": "string",
      "description": "Tells the user that no results were found for the given search parameters."
    },
    "ElemSearch": {
      "type": "string",
      "description": "The title of the Element Search embed, also displaying the number of elements found with the search."
    },
    "ElemNameCannotStartWithQuestionMark": {
      "type": "string",
      "description": "Tells the user that the suggestion cannot start with a question mark."
    },
    "ElemNameMaxLength": {
      "type": "string",
      "description": "Tells the user the maximum number of characters they can have in an element name."
    },
    "ElemNameForbiddenChar": {
      "type": "string",
      "description": "Tells the user the characters in their suggested element name that cannot be in element names."
    },
    "NoSuggestElemName": {
      "type": "string",
      "description": "Tells the user that their suggestion cannot be empty."
    },
    "MustSuggestInPlayChannel": {
      "type": "string",
      "description": "Tells the user that they can only suggest in play channels."
    },
    "ComboHasResult": {
      "type": "string",
      "description": "Tells the user that the combo they are trying to suggest a result for already has a result."
    },
    "SuggestedElem": {
      "type": "string",
      "description": "Tells the user what combo they just suggested."
    },
    "BreakdownTitle": {
      "type": "string",
      "description": "The title of the breakdown embed."
    },
    "InvBreakdownTitle": {
      "type": "string",
      "description": "The title of the inventory breakdown embed."
    },
    "GiveElem": {
      "type": "string",
      "description": "Tells the user they successfully gave the specified element."
    },
    "GiveCat": {
      "type": "string",
      "description": "Tells the user they successfully gave every element in the specified category."
    },
    "GiveAll": {
      "type": "string",
      "description": "Tells the user they successfully gave every element to the specified user."
    },
    "GraphLayoutInvalid": {
      "type": "string",
      "description": "Tells the user the specified graph layout is invalid."
    },
    "GraphTooBigForLayout": {
      "type": "string",
      "description": "Tells the user the graph is too big for the specified layout."
    },
    "GraphOutputInvalid": {
      "type": "string",
      "description": "Tells the user the specified output type is invalid."
    },
    "SentGraphToDMs": {
      "type": "string",
      "description": "Tells the user the graph was sent to their DMs."
    },
    "GraphNotRendered": {
      "type": "string",
      "description": "Tells the user the graph was not rendered by the bot."
    },
    "NameGraphElem": {
      "type": "string",
      "description": "Tells the user which element/category was graphed."
    },
    "SentNotationToDMs": {
      "type": "string",
      "description": "Tells the user the notation was sent to their DMs."
    },
    "NotationTooLong": {
      "type": "string",
      "description": "Tells the user the notation was sent as a file to their DMs due to being too long for a normal message."
    },
    "NameNotationElem": {
      "type": "string",
      "description": "Tells the user which element the notation is for."
    },
    "NameNotationCat": {
      "type": "string",
      "description": "Tells the user which category the notation is for."
    },
    "SentPathToDMs": {
      "type": "string",
      "description": "Tells the user the path as sent to their DMs."
    },
    "PathTooLong": {
      "type": "string",
      "description": "Tells the user the path was sent as a file to their DMs due to being too long for a normal message."
    },
    "NamePathElem": {
      "type": "string",
      "description": "Tells the user which element the path is for."
    },
    "NamePathCat": {
      "type": "string",
      "description": "Tells the user which category the path is for."
    },
    "NewElemPoll": {
      "type": "string",
      "description": "The title of polls for new elements."
    },
    "NewComboPoll": {
      "type": "string",
      "description": "The title of polls for new element combinations."
    },
    "PollFooter": {
      "type": "string",
      "description": "The footer of all polls."
    },
    "NewMarkPoll": {
      "type": "string",
      "description": "The title of polls for element marks."
    },
    "ElemImagePoll": {
      "type": "string",
      "description": "The title of polls for element images."
    },
    "AddCatPoll": {
      "type": "string",
      "description": "The title of polls for element categorizations."
    },
    "RmCatPoll": {
      "type": "string",
      "description": "The title of polls for element un-categorizations."
    },
    "DelCatPoll": {
      "type": "string",
      "description": "The title of polls for category deletions."
    },
    "CatImagePoll": {
      "type": "string",
      "description": "The title of polls for category images."
    },
    "ElemColorPoll": {
      "type": "string",
      "description": "The title of polls for element colors."
    },
    "ResetCatColorPoll": {
      "type": "string",
      "description": "The title of polls for category color resets."
    },
    "SetCatColorPoll": {
      "type": "string",
      "description": "The title of polls for category color changes."
    },
    "MoreElemsPoll": {
      "type": "string",
      "description": "The description to put when the number of elements displayed in the poll is shortened."
    },
    "IntersectPoll": {
      "type": "string",
      "description": "The title of polls for category intersections."
    },
    "UnionPoll": {
      "type": "string",
      "description": "The title of polls for category unions."
    },
    "DiffPoll": {
      "type": "string",
      "description": "The title of polls for category differences."
    },
    "DeleteVCatPoll": {
      "type": "string",
      "description": "The title of polls for virtual category deletion."
    },
    "NewNote": {
      "type": "string",
      "description": "The line displaying the new element mark in polls."
    },
    "OldNote": {
      "type": "string",
      "description": "The line displaying the old element mark in polls."
    },
    "NewImage": {
      "type": "string",
      "description": "The text on the link to the new image in polls."
    },
    "OldImage": {
      "type": "string",
      "description": "The text on the link to the old image in polls."
    },
    "CatPollElems": {
      "type": "string",
      "description": "The line with the title of the list of elements in categorization/decategorization polls."
    },
    "CatPollCat": {
      "type": "string",
      "description": "The line with the category in categorization/decategorization polls."
    },
    "ShownOnLeft": {
      "type": "string",
      "description": "The text denoting that the color of elements/categories is shown on the left color bar of the embed."
    },
    "OldColor": {
      "type": "string",
      "description": "The line with the old color in polls."
    },
    "PollCreatorText": {
      "type": "string",
      "description": "The line denoting the suggester of polls."
    },
    "Lasted": {
      "type": "string",
      "description": "How long the poll lasted."
    },
    "NewElemNews": {
      "type": "string",
      "description": "The news message for when a new element is created."
    },
    "NewComboNews": {
      "type": "string",
      "description": "The news message for when a new combination for an element is created."
    },
    "SignedElemNews": {
      "type": "string",
      "description": "The news message for successful element mark polls."
    },
    "AddedImageNews": {
      "type": "string",
      "description": "The news message when an element is first given an image."
    },
    "ChangedImageNews": {
      "type": "string",
      "description": "The news message when an element's image is changed."
    },
    "ColoredElemNews": {
      "type": "string",
      "description": "The news message when an element's color is changed."
    },
    "RejectedPollNews": {
      "type": "string",
      "description": "The news message when a poll is rejected."
    },
    "RejectedPollDM": {
      "type": "string",
      "description": "The DM to the user whose poll was rejected saying which server the poll was in, how many upvotes/downvotes it had, and the poll itself."
    },
    "AddCatNews": {
      "type": "string",
      "description": "The news message when a single element is added to a category."
    },
    "AddCatMultNews": {
      "type": "string",
      "description": "The news message when multiple elements are added to a category."
    },
    "RmCatNews": {
      "type": "string",
      "description": "The news message when a single element is removed from a category."
    },
    "RmCatMultNews": {
      "type": "string",
      "description": "The news message when multiple elements are removed from a category."
    },
    "ResetCatColorNews": {
      "type": "string",
      "description": "The news message when a category's color is reset."
    },
    "SetCatColorNews": {
      "type": "string",
      "description": "The news message when a category's color is changed."
    },
    "DeleteVCatNews": {
      "type": "string",
      "description": "The news message when a virtual category is deleted."
    },
    "MaxMarkLength": {
      "type": "string",
      "description": "Tells the user that a creator mark must be below 2400 characters."
    },
    "MarkChanged": {
      "type": "string",
      "description": "Tells the user that they changed the mark of their element."
    },
    "MarkSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to change the mark of the element."
    },
    "ImageAdded": {
      "type": "string",
      "description": "Tells the user that they added an image of their element."
    },
    "ImageChanged": {
      "type": "string",
      "description": "Tells the user that they changed the image of their element."
    },
    "ImageSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to change the image of the element."
    },
    "ElemColorChanged": {
      "type": "string",
      "description": "Tells the user that they changed the color of their element."
    },
    "ElemColorSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to change the color of the element."
    },
    "CatImageSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to change the image of the category."
    },
    "CatColorSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to change the color of the category."
    },
    "VCatDeleteSuggested": {
      "type": "string",
      "description": "Tells the user that a poll was created to delete a virtual category."
    },
    "MustAttachImage": {
      "type": "string",
      "description": "Tell the user they must attach an image."
    },
    "AddCatMustHaveSeparator": {
      "type": "string",
      "description": "Tell the user they must separate the category name and the elements to add to the category with a vertical bar."
    },
    "RmCatMustHaveSeparator": {
      "type": "string",
      "description": "Tell the user they must separate the category name and the elements to remove from the category with a vertical bar."
    },
    "MarkMustHaveSeparator": {
      "type": "string",
      "description": "Tell the user they must separate the element name and the element mark with a vertical bar."
    },
    "PingMessage": {
      "type": "string",
      "description": "The message given by the !ping command, also displaying the latency of the bot's response."
    },
    "MustHaveElemForPath": {
      "type": "string",
      "description": "Tell the user they must have the element to get its path."
    },
    "MustHaveCatForPath": {
      "type": "string",
      "description": "Tell the user they must have every element in the category to get its path."
    },
    "CannotHaveBothElemAndCat": {
      "type": "string",
      "description": "Tell the user that they cannot input both an element and a category."
    },
    "IDCannotBeNegative": {
      "type": "string",
      "description": "Tell the user their element ID cannot be negative."
    },
    "DBNoCombo": {
      "type": "string",
      "description": "Tell the user the combo doesn't exist."
    },
    "PollNoExist": {
      "type": "string",
      "description": "Tell the user the poll doesn't exist."
    },
    "CalculatingPing": {
      "type": "string",
      "description": "Tell the user that the bot is calculating the ping."
    },
    "ElementCount": {
      "type": "string",
      "description": "Tell the user the number of elements."
    },
    "SentWordCloud": {
      "type": "string",
      "description": "Tell the user the word cloud was sent in their DMs."
    },
    "WordCloudElem": {
      "type": "string",
      "description": "Tell the user which element the word cloud is for."
    }
  }
}