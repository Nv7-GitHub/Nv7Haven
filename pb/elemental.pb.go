// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: elemental.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Suggestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string   `protobuf:"bytes,1,opt,name=Creator,proto3" json:"Creator,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Votes   int64    `protobuf:"varint,3,opt,name=Votes,proto3" json:"Votes,omitempty"`
	Color   *Color   `protobuf:"bytes,4,opt,name=Color,proto3" json:"Color,omitempty"`
	Voted   []string `protobuf:"bytes,5,rep,name=Voted,proto3" json:"Voted,omitempty"`
}

func (x *Suggestion) Reset() {
	*x = Suggestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Suggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suggestion) ProtoMessage() {}

func (x *Suggestion) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suggestion.ProtoReflect.Descriptor instead.
func (*Suggestion) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{0}
}

func (x *Suggestion) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Suggestion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Suggestion) GetVotes() int64 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *Suggestion) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *Suggestion) GetVoted() []string {
	if x != nil {
		return x.Voted
	}
	return nil
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base       string  `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Lightness  float32 `protobuf:"fixed32,2,opt,name=Lightness,proto3" json:"Lightness,omitempty"`
	Saturation float32 `protobuf:"fixed32,3,opt,name=Saturation,proto3" json:"Saturation,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{1}
}

func (x *Color) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Color) GetLightness() float32 {
	if x != nil {
		return x.Lightness
	}
	return 0
}

func (x *Color) GetSaturation() float32 {
	if x != nil {
		return x.Saturation
	}
	return 0
}

type Combination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elem1 string `protobuf:"bytes,1,opt,name=elem1,proto3" json:"elem1,omitempty"`
	Elem2 string `protobuf:"bytes,2,opt,name=elem2,proto3" json:"elem2,omitempty"`
}

func (x *Combination) Reset() {
	*x = Combination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Combination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Combination) ProtoMessage() {}

func (x *Combination) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Combination.ProtoReflect.Descriptor instead.
func (*Combination) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{2}
}

func (x *Combination) GetElem1() string {
	if x != nil {
		return x.Elem1
	}
	return ""
}

func (x *Combination) GetElem2() string {
	if x != nil {
		return x.Elem2
	}
	return ""
}

type CombinationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Exists bool   `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *CombinationResult) Reset() {
	*x = CombinationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationResult) ProtoMessage() {}

func (x *CombinationResult) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationResult.ProtoReflect.Descriptor instead.
func (*CombinationResult) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{3}
}

func (x *CombinationResult) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CombinationResult) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color      string   `protobuf:"bytes,1,opt,name=Color,proto3" json:"Color,omitempty"`
	Comment    string   `protobuf:"bytes,2,opt,name=Comment,proto3" json:"Comment,omitempty"`
	CreatedOn  int64    `protobuf:"varint,3,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	Creator    string   `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
	Name       string   `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Parents    []string `protobuf:"bytes,6,rep,name=Parents,proto3" json:"Parents,omitempty"`
	Pioneer    string   `protobuf:"bytes,7,opt,name=Pioneer,proto3" json:"Pioneer,omitempty"`
	Uses       int64    `protobuf:"varint,8,opt,name=Uses,proto3" json:"Uses,omitempty"`
	FoundBy    int64    `protobuf:"varint,9,opt,name=FoundBy,proto3" json:"FoundBy,omitempty"`
	Complexity int64    `protobuf:"varint,10,opt,name=Complexity,proto3" json:"Complexity,omitempty"`
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{4}
}

func (x *Element) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Element) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Element) GetCreatedOn() int64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *Element) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Element) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Element) GetParents() []string {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *Element) GetPioneer() string {
	if x != nil {
		return x.Pioneer
	}
	return ""
}

func (x *Element) GetUses() int64 {
	if x != nil {
		return x.Uses
	}
	return 0
}

func (x *Element) GetFoundBy() int64 {
	if x != nil {
		return x.FoundBy
	}
	return 0
}

func (x *Element) GetComplexity() int64 {
	if x != nil {
		return x.Complexity
	}
	return 0
}

type Inventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found []string `protobuf:"bytes,1,rep,name=Found,proto3" json:"Found,omitempty"`
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{5}
}

func (x *Inventory) GetFound() []string {
	if x != nil {
		return x.Found
	}
	return nil
}

type SuggestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Element string `protobuf:"bytes,2,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *SuggestionRequest) Reset() {
	*x = SuggestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionRequest) ProtoMessage() {}

func (x *SuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionRequest.ProtoReflect.Descriptor instead.
func (*SuggestionRequest) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SuggestionRequest) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

type SuggestionCombinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestions []string `protobuf:"bytes,1,rep,name=Suggestions,proto3" json:"Suggestions,omitempty"`
}

func (x *SuggestionCombinationResponse) Reset() {
	*x = SuggestionCombinationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionCombinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionCombinationResponse) ProtoMessage() {}

func (x *SuggestionCombinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionCombinationResponse.ProtoReflect.Descriptor instead.
func (*SuggestionCombinationResponse) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestionCombinationResponse) GetSuggestions() []string {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type VoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Create bool `protobuf:"varint,1,opt,name=Create,proto3" json:"Create,omitempty"`
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{8}
}

func (x *VoteResponse) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Elem1   string `protobuf:"bytes,2,opt,name=Elem1,proto3" json:"Elem1,omitempty"`
	Elem2   string `protobuf:"bytes,3,opt,name=Elem2,proto3" json:"Elem2,omitempty"`
	Mark    string `protobuf:"bytes,4,opt,name=Mark,proto3" json:"Mark,omitempty"`
	Pioneer string `protobuf:"bytes,5,opt,name=Pioneer,proto3" json:"Pioneer,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRequest) GetElem1() string {
	if x != nil {
		return x.Elem1
	}
	return ""
}

func (x *CreateRequest) GetElem2() string {
	if x != nil {
		return x.Elem2
	}
	return ""
}

func (x *CreateRequest) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *CreateRequest) GetPioneer() string {
	if x != nil {
		return x.Pioneer
	}
	return ""
}

type NewSuggestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elem1      string      `protobuf:"bytes,1,opt,name=Elem1,proto3" json:"Elem1,omitempty"`
	Elem2      string      `protobuf:"bytes,2,opt,name=Elem2,proto3" json:"Elem2,omitempty"`
	Suggestion *Suggestion `protobuf:"bytes,3,opt,name=Suggestion,proto3" json:"Suggestion,omitempty"`
}

func (x *NewSuggestionRequest) Reset() {
	*x = NewSuggestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSuggestionRequest) ProtoMessage() {}

func (x *NewSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSuggestionRequest.ProtoReflect.Descriptor instead.
func (*NewSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{10}
}

func (x *NewSuggestionRequest) GetElem1() string {
	if x != nil {
		return x.Elem1
	}
	return ""
}

func (x *NewSuggestionRequest) GetElem2() string {
	if x != nil {
		return x.Elem2
	}
	return ""
}

func (x *NewSuggestionRequest) GetSuggestion() *Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type RandomCombinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []string `protobuf:"bytes,1,rep,name=Elements,proto3" json:"Elements,omitempty"`
}

func (x *RandomCombinationResponse) Reset() {
	*x = RandomCombinationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomCombinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomCombinationResponse) ProtoMessage() {}

func (x *RandomCombinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomCombinationResponse.ProtoReflect.Descriptor instead.
func (*RandomCombinationResponse) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{11}
}

func (x *RandomCombinationResponse) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

type GetAllChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Element `protobuf:"bytes,1,rep,name=Elements,proto3" json:"Elements,omitempty"`
	Count    int64      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllChunk) Reset() {
	*x = GetAllChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllChunk) ProtoMessage() {}

func (x *GetAllChunk) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllChunk.ProtoReflect.Descriptor instead.
func (*GetAllChunk) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllChunk) GetElements() []*Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *GetAllChunk) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RecentCombination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elem1 string `protobuf:"bytes,1,opt,name=Elem1,proto3" json:"Elem1,omitempty"`
	Elem2 string `protobuf:"bytes,2,opt,name=Elem2,proto3" json:"Elem2,omitempty"`
	Elem3 string `protobuf:"bytes,3,opt,name=Elem3,proto3" json:"Elem3,omitempty"`
}

func (x *RecentCombination) Reset() {
	*x = RecentCombination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentCombination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentCombination) ProtoMessage() {}

func (x *RecentCombination) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentCombination.ProtoReflect.Descriptor instead.
func (*RecentCombination) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{13}
}

func (x *RecentCombination) GetElem1() string {
	if x != nil {
		return x.Elem1
	}
	return ""
}

func (x *RecentCombination) GetElem2() string {
	if x != nil {
		return x.Elem2
	}
	return ""
}

func (x *RecentCombination) GetElem3() string {
	if x != nil {
		return x.Elem3
	}
	return ""
}

type Recents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recents []*RecentCombination `protobuf:"bytes,1,rep,name=Recents,proto3" json:"Recents,omitempty"`
}

func (x *Recents) Reset() {
	*x = Recents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elemental_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recents) ProtoMessage() {}

func (x *Recents) ProtoReflect() protoreflect.Message {
	mi := &file_elemental_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recents.ProtoReflect.Descriptor instead.
func (*Recents) Descriptor() ([]byte, []int) {
	return file_elemental_proto_rawDescGZIP(), []int{14}
}

func (x *Recents) GetRecents() []*RecentCombination {
	if x != nil {
		return x.Recents
	}
	return nil
}

var File_elemental_proto protoreflect.FileDescriptor

var file_elemental_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x0a, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x22, 0x59, 0x0a, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x53, 0x61, 0x74, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6c,
	0x65, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x32,
	0x22, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x87, 0x02, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x73, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x22, 0x21, 0x0a, 0x09, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x3f,
	0x0a, 0x11, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x41, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x26, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x79, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6c, 0x65, 0x6d, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6c, 0x65, 0x6d,
	0x31, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69,
	0x6f, 0x6e, 0x65, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x14, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6c, 0x65, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6c,
	0x65, 0x6d, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x32, 0x12, 0x35, 0x0a, 0x0a, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x37, 0x0a, 0x19, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55,
	0x0a, 0x11, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6c, 0x65,
	0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x32, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6c, 0x65, 0x6d, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6c, 0x65, 0x6d, 0x33, 0x22, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x36, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xc8, 0x08, 0x0a, 0x09, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x12, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x14, 0x2e, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x15, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28,
	0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x67, 0x67, 0x12, 0x18, 0x2e, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x67, 0x67, 0x12, 0x1f, 0x2e, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x4c, 0x6f, 0x6e, 0x65, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x24, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0b, 0x55, 0x70, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x24, 0x2e, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x57, 0x61,
	0x69, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_elemental_proto_rawDescOnce sync.Once
	file_elemental_proto_rawDescData = file_elemental_proto_rawDesc
)

func file_elemental_proto_rawDescGZIP() []byte {
	file_elemental_proto_rawDescOnce.Do(func() {
		file_elemental_proto_rawDescData = protoimpl.X.CompressGZIP(file_elemental_proto_rawDescData)
	})
	return file_elemental_proto_rawDescData
}

var file_elemental_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_elemental_proto_goTypes = []any{
	(*Suggestion)(nil),                    // 0: elemental.Suggestion
	(*Color)(nil),                         // 1: elemental.Color
	(*Combination)(nil),                   // 2: elemental.Combination
	(*CombinationResult)(nil),             // 3: elemental.CombinationResult
	(*Element)(nil),                       // 4: elemental.Element
	(*Inventory)(nil),                     // 5: elemental.Inventory
	(*SuggestionRequest)(nil),             // 6: elemental.SuggestionRequest
	(*SuggestionCombinationResponse)(nil), // 7: elemental.SuggestionCombinationResponse
	(*VoteResponse)(nil),                  // 8: elemental.VoteResponse
	(*CreateRequest)(nil),                 // 9: elemental.CreateRequest
	(*NewSuggestionRequest)(nil),          // 10: elemental.NewSuggestionRequest
	(*RandomCombinationResponse)(nil),     // 11: elemental.RandomCombinationResponse
	(*GetAllChunk)(nil),                   // 12: elemental.GetAllChunk
	(*RecentCombination)(nil),             // 13: elemental.RecentCombination
	(*Recents)(nil),                       // 14: elemental.Recents
	(*wrapperspb.StringValue)(nil),        // 15: google.protobuf.StringValue
	(*emptypb.Empty)(nil),                 // 16: google.protobuf.Empty
}
var file_elemental_proto_depIdxs = []int32{
	1,  // 0: elemental.Suggestion.Color:type_name -> elemental.Color
	0,  // 1: elemental.NewSuggestionRequest.Suggestion:type_name -> elemental.Suggestion
	4,  // 2: elemental.GetAllChunk.Elements:type_name -> elemental.Element
	13, // 3: elemental.Recents.Recents:type_name -> elemental.RecentCombination
	15, // 4: elemental.Elemental.GetElem:input_type -> google.protobuf.StringValue
	2,  // 5: elemental.Elemental.GetCombination:input_type -> elemental.Combination
	15, // 6: elemental.Elemental.GetAll:input_type -> google.protobuf.StringValue
	15, // 7: elemental.Elemental.GetInv:input_type -> google.protobuf.StringValue
	6,  // 8: elemental.Elemental.AddFound:input_type -> elemental.SuggestionRequest
	15, // 9: elemental.Elemental.GetSuggestion:input_type -> google.protobuf.StringValue
	2,  // 10: elemental.Elemental.GetSuggestionCombos:input_type -> elemental.Combination
	6,  // 11: elemental.Elemental.UpSuggestion:input_type -> elemental.SuggestionRequest
	6,  // 12: elemental.Elemental.DownSuggestion:input_type -> elemental.SuggestionRequest
	9,  // 13: elemental.Elemental.CreateSugg:input_type -> elemental.CreateRequest
	10, // 14: elemental.Elemental.NewSugg:input_type -> elemental.NewSuggestionRequest
	15, // 15: elemental.Elemental.RandomLonely:input_type -> google.protobuf.StringValue
	15, // 16: elemental.Elemental.UpAndComing:input_type -> google.protobuf.StringValue
	16, // 17: elemental.Elemental.GetRec:input_type -> google.protobuf.Empty
	16, // 18: elemental.Elemental.WaitForNextRecent:input_type -> google.protobuf.Empty
	4,  // 19: elemental.Elemental.GetElem:output_type -> elemental.Element
	3,  // 20: elemental.Elemental.GetCombination:output_type -> elemental.CombinationResult
	12, // 21: elemental.Elemental.GetAll:output_type -> elemental.GetAllChunk
	5,  // 22: elemental.Elemental.GetInv:output_type -> elemental.Inventory
	16, // 23: elemental.Elemental.AddFound:output_type -> google.protobuf.Empty
	0,  // 24: elemental.Elemental.GetSuggestion:output_type -> elemental.Suggestion
	7,  // 25: elemental.Elemental.GetSuggestionCombos:output_type -> elemental.SuggestionCombinationResponse
	8,  // 26: elemental.Elemental.UpSuggestion:output_type -> elemental.VoteResponse
	8,  // 27: elemental.Elemental.DownSuggestion:output_type -> elemental.VoteResponse
	16, // 28: elemental.Elemental.CreateSugg:output_type -> google.protobuf.Empty
	8,  // 29: elemental.Elemental.NewSugg:output_type -> elemental.VoteResponse
	11, // 30: elemental.Elemental.RandomLonely:output_type -> elemental.RandomCombinationResponse
	11, // 31: elemental.Elemental.UpAndComing:output_type -> elemental.RandomCombinationResponse
	14, // 32: elemental.Elemental.GetRec:output_type -> elemental.Recents
	16, // 33: elemental.Elemental.WaitForNextRecent:output_type -> google.protobuf.Empty
	19, // [19:34] is the sub-list for method output_type
	4,  // [4:19] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_elemental_proto_init() }
func file_elemental_proto_init() {
	if File_elemental_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_elemental_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Suggestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Combination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CombinationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Inventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SuggestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SuggestionCombinationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*NewSuggestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RandomCombinationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RecentCombination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elemental_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Recents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elemental_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_elemental_proto_goTypes,
		DependencyIndexes: file_elemental_proto_depIdxs,
		MessageInfos:      file_elemental_proto_msgTypes,
	}.Build()
	File_elemental_proto = out.File
	file_elemental_proto_rawDesc = nil
	file_elemental_proto_goTypes = nil
	file_elemental_proto_depIdxs = nil
}
